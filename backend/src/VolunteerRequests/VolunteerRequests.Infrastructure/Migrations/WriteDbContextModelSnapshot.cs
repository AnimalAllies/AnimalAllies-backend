// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VolunteerRequests.Infrastructure.DbContexts;

#nullable disable

namespace VolunteerRequests.Infrastructure.Migrations
{
    [DbContext(typeof(WriteDbContext))]
    partial class WriteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("volunteer_requests")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VolunteerRequests.Domain.Aggregates.ProhibitionSending", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("BannedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("banned_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_prohibitions_sending");

                    b.ToTable("prohibitions_sending", "volunteer_requests");
                });

            modelBuilder.Entity("VolunteerRequests.Domain.Aggregates.VolunteerRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uuid")
                        .HasColumnName("admin_id");

                    b.Property<Guid>("DiscussionId")
                        .HasColumnType("uuid")
                        .HasColumnName("discussion_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.ComplexProperty<Dictionary<string, object>>("CreatedAt", "VolunteerRequests.Domain.Aggregates.VolunteerRequest.CreatedAt#CreatedAt", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTime>("Value")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("created_at");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("RejectionComment", "VolunteerRequests.Domain.Aggregates.VolunteerRequest.RejectionComment#RejectionComment", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .HasColumnType("text")
                                .HasColumnName("rejection_comment");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("RequestStatus", "VolunteerRequests.Domain.Aggregates.VolunteerRequest.RequestStatus#RequestStatus", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("request_status");
                        });

                    b.HasKey("Id")
                        .HasName("pk_volunteer_requests");

                    b.ToTable("volunteer_requests", "volunteer_requests");
                });

            modelBuilder.Entity("VolunteerRequests.Domain.Aggregates.VolunteerRequest", b =>
                {
                    b.OwnsOne("AnimalAllies.SharedKernel.Shared.ValueObjects.VolunteerInfo", "VolunteerInfo", b1 =>
                        {
                            b1.Property<Guid>("VolunteerRequestId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("SocialNetworks")
                                .IsRequired()
                                .HasColumnType("jsonb")
                                .HasColumnName("social_networks");

                            b1.HasKey("VolunteerRequestId");

                            b1.ToTable("volunteer_requests", "volunteer_requests");

                            b1.WithOwner()
                                .HasForeignKey("VolunteerRequestId")
                                .HasConstraintName("fk_volunteer_requests_volunteer_requests_id");

                            b1.OwnsOne("AnimalAllies.SharedKernel.Shared.ValueObjects.Email", "Email", b2 =>
                                {
                                    b2.Property<Guid>("VolunteerInfoVolunteerRequestId")
                                        .HasColumnType("uuid")
                                        .HasColumnName("id");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasColumnName("email");

                                    b2.HasKey("VolunteerInfoVolunteerRequestId");

                                    b2.ToTable("volunteer_requests", "volunteer_requests");

                                    b2.WithOwner()
                                        .HasForeignKey("VolunteerInfoVolunteerRequestId")
                                        .HasConstraintName("fk_volunteer_requests_volunteer_requests_id");
                                });

                            b1.OwnsOne("AnimalAllies.SharedKernel.Shared.ValueObjects.FullName", "FullName", b2 =>
                                {
                                    b2.Property<Guid>("VolunteerInfoVolunteerRequestId")
                                        .HasColumnType("uuid")
                                        .HasColumnName("id");

                                    b2.Property<string>("FirstName")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("first_name");

                                    b2.Property<string>("Patronymic")
                                        .HasColumnType("text")
                                        .HasColumnName("patronymic");

                                    b2.Property<string>("SecondName")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("second_name");

                                    b2.HasKey("VolunteerInfoVolunteerRequestId");

                                    b2.ToTable("volunteer_requests", "volunteer_requests");

                                    b2.WithOwner()
                                        .HasForeignKey("VolunteerInfoVolunteerRequestId")
                                        .HasConstraintName("fk_volunteer_requests_volunteer_requests_id");
                                });

                            b1.OwnsOne("AnimalAllies.SharedKernel.Shared.ValueObjects.PhoneNumber", "PhoneNumber", b2 =>
                                {
                                    b2.Property<Guid>("VolunteerInfoVolunteerRequestId")
                                        .HasColumnType("uuid")
                                        .HasColumnName("id");

                                    b2.Property<string>("Number")
                                        .IsRequired()
                                        .HasMaxLength(14)
                                        .HasColumnType("character varying(14)")
                                        .HasColumnName("phone_number");

                                    b2.HasKey("VolunteerInfoVolunteerRequestId");

                                    b2.ToTable("volunteer_requests", "volunteer_requests");

                                    b2.WithOwner()
                                        .HasForeignKey("VolunteerInfoVolunteerRequestId")
                                        .HasConstraintName("fk_volunteer_requests_volunteer_requests_id");
                                });

                            b1.OwnsOne("AnimalAllies.SharedKernel.Shared.ValueObjects.VolunteerDescription", "VolunteerDescription", b2 =>
                                {
                                    b2.Property<Guid>("VolunteerInfoVolunteerRequestId")
                                        .HasColumnType("uuid")
                                        .HasColumnName("id");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(1500)
                                        .HasColumnType("character varying(1500)")
                                        .HasColumnName("description");

                                    b2.HasKey("VolunteerInfoVolunteerRequestId");

                                    b2.ToTable("volunteer_requests", "volunteer_requests");

                                    b2.WithOwner()
                                        .HasForeignKey("VolunteerInfoVolunteerRequestId")
                                        .HasConstraintName("fk_volunteer_requests_volunteer_requests_id");
                                });

                            b1.OwnsOne("AnimalAllies.SharedKernel.Shared.ValueObjects.WorkExperience", "WorkExperience", b2 =>
                                {
                                    b2.Property<Guid>("VolunteerInfoVolunteerRequestId")
                                        .HasColumnType("uuid")
                                        .HasColumnName("id");

                                    b2.Property<int>("Value")
                                        .HasColumnType("integer")
                                        .HasColumnName("work_experience");

                                    b2.HasKey("VolunteerInfoVolunteerRequestId");

                                    b2.ToTable("volunteer_requests", "volunteer_requests");

                                    b2.WithOwner()
                                        .HasForeignKey("VolunteerInfoVolunteerRequestId")
                                        .HasConstraintName("fk_volunteer_requests_volunteer_requests_id");
                                });

                            b1.Navigation("Email")
                                .IsRequired();

                            b1.Navigation("FullName")
                                .IsRequired();

                            b1.Navigation("PhoneNumber")
                                .IsRequired();

                            b1.Navigation("VolunteerDescription")
                                .IsRequired();

                            b1.Navigation("WorkExperience")
                                .IsRequired();
                        });

                    b.Navigation("VolunteerInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
